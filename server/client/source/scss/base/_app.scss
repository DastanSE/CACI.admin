@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: ttf ) {
  $src: '../assets/fonts/';

  $extmods: (eot: '?', svg: '#' + str-replace($name, ' ', '_'));

  $formats: (otf: 'opentype', ttf: 'truetype');

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

html {
  height: 100%;
  width: 100%;
}
body {
  height: 100%;
  width: 100%;
}

#root {
  height: 100%;
  width: 100%;
}

.App {
	height: 100%;
  width: 100%;
}
.menu-li {
  display: block;
  li {
    display: inline-block;
    margin: 0 5px;
  }
}
.navlinks {
  text-decoration: none;
  color: #fff;
  font-size: 20px;
}

.navlinks-active {
  color: #cddc39;
}

.dashboard-links {
  text-decoration: none;
  text-transform: uppercase;

}
.test p{
  color: red;
}
.masonry-container {
  width: 80%;
  margin: auto;
  margin-top: 10px;
  border: 1px solid rgba(0, 0, 0, 0.1);
  p {
    text-align: center;
    padding: 4px;
    font-family: monospace;
    background: #222;
    color: #efefef;
  }
}
.masonry {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-content: stretch;
  width: 80%;
  margin: auto;
}
